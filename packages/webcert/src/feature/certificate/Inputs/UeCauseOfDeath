import {
  CertificateDataElement,
  Dropdown,
  ConfigureUeCauseOfDeath,
  QuestionValidationTexts,
  ValueCauseOfDeath,
  TextInput,
} from '@frontend/common'
import React, { useState } from 'react'
import { ConfigUeDropdownItem } from '@frontend/common/src/types/certificate'

import { useSelector } from 'react-redux'
import styled from 'styled-components/macro'
import { updateCertificateDataElement } from '../../../store/certificate/certificateActions'
import { getQuestionHasValidationError, getShowValidationErrors } from '../../../store/certificate/certificateSelectors'
import { useAppDispatch } from '../../../store/store'

export interface Props {
  disabled?: boolean
  question: CertificateDataElement
}

const UeCauseOfDeath: React.FC<Props> = ({ question, disabled }) => {
  const isShowValidationError = useSelector(getShowValidationErrors)
  const config = question.config as ConfigureUeCauseOfDeath
  const dispatch = useAppDispatch()
  const hasValidationError = useSelector(getQuestionHasValidationError(question.id))
  return (
    <div className="iu-text-justify">
      <div className="iu-fl iu-fs-700 iu-color-warning">{config.label}</div>
      <div></div>
    </div>
  )
}

export default UeCauseOfDeath
