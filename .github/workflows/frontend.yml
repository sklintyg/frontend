# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Frontend CI

on:
  push:
    branches: [master, 'project/**']
  pull_request:
    branches: [master, 'project/**']

jobs:
  eslint:
    name: runner / eslint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - uses: reviewdog/action-eslint@v1

  build:
    name: Build and Test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    # To use Remote Caching, uncomment the next lines and follow the steps below.
    # env:
    #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    #  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Typescript
        run: yarn typescript

      - name: Test
        run: yarn test
  # tsc:
  #   name: runner / tsc
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       package: [common, webcert]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '14.x'
  #         cache: 'yarn'
  #     - run: yarn install --frozen-lockfile
  #     - run: yarn workspace @frontend/${{ matrix.package }} tsc --noEmit
  # vitest:
  #   name: runner / vitest
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       package: [common, webcert]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '14.x'
  #         cache: 'yarn'
  #     - run: yarn install --frozen-lockfile
  #     - run: yarn workspace @frontend/${{ matrix.package }} test:ci
